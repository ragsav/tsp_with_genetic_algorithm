{"version":3,"sources":["logo.svg","ga/ga.js","ga/range.js","ga/tsp.js","App.js","reportWebVitals.js","index.js"],"names":["calculateFitness","graph","chromosome","x1","y1","x2","y2","totalDist","i","path","length","source","target","x","y","Math","sqrt","shuffleArray","array","j","floor","random","temp","getInitialGeneration","n","cities","population","Array","from","_","fitness","unshift","push","mating","newPopulation","l","p1","p2","chromosomeLength","childPath","fill","randomArraySelector","slice","sort","vis","k","childChromosome","mutation","mutatedPopulation","a","b","GA","generations","initialPopulation","gen","concat","splice","result","size","Range","props","Row","style","padding","margin","Col","display","justifyContent","alignItems","type","min","max","value","step","onChange","e","preventDefault","height","fontSize","fontWeight","title","plotNodes","ctx","cityColor","beginPath","arc","PI","fillStyle","closePath","plotEdges","edgeColor","clearRect","window","innerWidth","innerHeight","moveTo","lineTo","strokeStyle","stroke","TSP","useState","setCtx","canvasRef","useRef","graphRef","gaSteps","setGASteps","status","setStatus","speed","setSpeed","setGenerations","setInitialPopulation","setCities","data","setData","over","setOver","setCityColor","setEdgeColor","useEffect","current","document","getElementById","getContext","width","graphNodes","round","id","generateRandomGraph","localeCompare","interval","setInterval","next","done","state","clearInterval","Button","variant","boxShadow","onClick","disabled","textAlign","backgroundColor","val","borderRadius","color","triangle","onChangeComplete","event","hex","ref","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.143ef484.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const distance = (x1, y1, x2, y2) => {\r\n  return Math.sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2);\r\n};\r\nconst calculateFitness = (graph, chromosome) => {\r\n  let totalDist = 0;\r\n\r\n  for (let i = 0; i < chromosome.path.length - 1; i++) {\r\n    const source = graph[chromosome.path[i]];\r\n    const target = graph[chromosome.path[i + 1]];\r\n    totalDist += distance(source.x, source.y, target.x, target.y);\r\n  }\r\n  return totalDist;\r\n};\r\n\r\nfunction shuffleArray(array) {\r\n  for (var i = array.length - 1; i > 0; i--) {\r\n    var j = Math.floor(Math.random() * (i + 1));\r\n    var temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n  return array;\r\n}\r\n\r\nconst getInitialGeneration = (n, cities, graph) => {\r\n  const population = [];\r\n  for (let i = 0; i < n; i++) {\r\n    const chromosome = {\r\n      path: shuffleArray(Array.from({ length: cities - 1 }, (_, i) => i + 1)),\r\n      fitness: 0,\r\n    };\r\n    chromosome.path.unshift(0);\r\n    chromosome.path.push(0);\r\n    chromosome.fitness = calculateFitness(graph, chromosome);\r\n    population.push({ ...chromosome });\r\n  }\r\n  return population;\r\n};\r\n\r\nconst mating = (population, graph) => {\r\n  population = shuffleArray(population);\r\n  const newPopulation = [];\r\n  const l = population.length;\r\n  for (let i = 0; i < l / 2; i++) {\r\n    const p1 = population[i];\r\n    const p2 = population[l - i - 1];\r\n    const chromosomeLength = p1.path.length;\r\n    //making child path using the parent paths\r\n    const childPath = new Array(p1.path.length).fill(-1);\r\n\r\n    let randomArraySelector = shuffleArray(\r\n      Array.from({ length: chromosomeLength - 2 }, (_, i) => i + 1)\r\n    );\r\n\r\n    randomArraySelector = randomArraySelector.slice(\r\n      randomArraySelector.length / 2\r\n    );\r\n\r\n    randomArraySelector.sort();\r\n    const vis = Array(chromosomeLength).fill(false);\r\n\r\n    for (let j = 1; j < randomArraySelector.length; j++) {\r\n      childPath[randomArraySelector[j]] = p1.path[randomArraySelector[j]];\r\n      vis[p1.path[randomArraySelector[j]]] = true;\r\n    }\r\n\r\n    let k = 0;\r\n    let j = 0;\r\n    while (j < chromosomeLength - 1) {\r\n      if (childPath[j] === -1) {\r\n        if (!vis[p2.path[k]]) {\r\n          childPath[j] = p2.path[k];\r\n          j++;\r\n          k++;\r\n        } else {\r\n          k++;\r\n        }\r\n      } else {\r\n        j++;\r\n      }\r\n    }\r\n\r\n    childPath[chromosomeLength - 1] = 0;\r\n    const childChromosome = { path: childPath, fitness: 0 };\r\n    childChromosome.fitness = calculateFitness(graph, childChromosome);\r\n    newPopulation.push(childChromosome);\r\n  }\r\n\r\n  return newPopulation;\r\n};\r\n\r\nconst mutation = (newPopulation, graph) => {\r\n  const mutatedPopulation = [];\r\n  let l = newPopulation.length;\r\n  for (let i = 0; i < l; i++) {\r\n    mutatedPopulation.push({ path: [...newPopulation[i].path], fitness: 0 });\r\n  }\r\n  for (let i = 0; i < l; i++) {\r\n    const chromosomeLength = mutatedPopulation[i].path.length;\r\n    const a = Math.floor(Math.random() * (chromosomeLength - 3)) + 1;\r\n    const b = Math.floor(Math.random() * (chromosomeLength - 3)) + 1;\r\n    const temp = mutatedPopulation[i].path[a];\r\n    mutatedPopulation[i].path[a] = mutatedPopulation[i].path[b];\r\n    mutatedPopulation[i].path[b] = temp;\r\n    mutatedPopulation[i].fitness = calculateFitness(\r\n      graph,\r\n      mutatedPopulation[i]\r\n    );\r\n  }\r\n  return mutatedPopulation;\r\n};\r\n\r\nconst GA = function* (cities, graph, generations, initialPopulation) {\r\n  var population = getInitialGeneration(initialPopulation, cities, graph);\r\n  const results = [];\r\n  for (let gen = 0; gen < generations; gen++) {\r\n    //mating\r\n    const newPopulation = mating(population, graph);\r\n\r\n    //mutation\r\n    const mutatedPopulation = mutation(newPopulation, graph);\r\n    population = population.concat(mutatedPopulation);\r\n\r\n    //selection\r\n    population.sort((a, b) => {\r\n      if (a.fitness < b.fitness) return -1;\r\n      if (a.fitness > b.fitness) return 1;\r\n      return 0;\r\n    });\r\n    population = population.splice(0, initialPopulation);\r\n    yield { result: population[0], size: population.length ,gen};\r\n  }\r\n};\r\n\r\nexport default GA;\r\n","import { Row, Button, Col } from \"react-bootstrap\";\r\nexport const Range = (props) => {\r\n  return (\r\n    <Row\r\n      style={{\r\n        padding: 2,\r\n        margin: \"2px 0px 2px 0px\",\r\n      }}\r\n    >\r\n      <Col\r\n        style={{\r\n          padding: 2,\r\n          margin: 0,\r\n          display: \"flex\",\r\n          justifyContent: \"flex-start\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <input\r\n          type=\"range\"\r\n          min={props.min}\r\n          max={props.max}\r\n          value={props.value}\r\n          step={props.step}\r\n          onChange={(e) => {\r\n            e.preventDefault();\r\n            props.onChange(e.target.value);\r\n          }}\r\n          style={{\r\n            margin: 0,\r\n            padding: 0,\r\n            height: 4,\r\n          }}\r\n        />\r\n      </Col>\r\n      <Col\r\n        style={{\r\n          padding: 2,\r\n          margin: 0,\r\n          fontSize: 12,\r\n          fontWeight: \"600\",\r\n          display: \"flex\",\r\n          justifyContent: \"flex-start\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <span>{`${props.title} : ${props.value}`}</span>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { Row, Button, Col } from \"react-bootstrap\";\r\nimport { GithubPicker } from \"react-color\";\r\nimport GA from \"./ga\";\r\nimport { Range } from \"./range\";\r\n\r\nconst generateRandomGraph = (n, height, width) => {\r\n  const graphNodes = [];\r\n  for (let i = 0; i < n; i++) {\r\n    const x = Math.round(Math.random() * (width - 100)) + 50;\r\n    const y = Math.round(Math.random() * (height - 100)) + 50;\r\n    graphNodes.push({ id: i, x, y });\r\n  }\r\n  return graphNodes;\r\n};\r\n\r\nconst plotNodes = (ctx, graph, cityColor) => {\r\n  let l = graph.length;\r\n  for (let i = 0; i < l; i++) {\r\n    ctx.beginPath();\r\n    ctx.arc(graph[i].x, graph[i].y, 5, 0, 2 * Math.PI);\r\n    ctx.fillStyle = cityColor;\r\n    ctx.fill();\r\n    ctx.closePath();\r\n    // ctx.font = \"8pt Calibri\";\r\n    // ctx.fillStyle = \"white\";\r\n    // ctx.textAlign = \"center\";\r\n    // ctx.fillText(i.toString(), graph[i].x - 0.5, graph[i].y + 3);\r\n  }\r\n};\r\n\r\nconst plotEdges = (ctx, graph, result, edgeColor, cityColor) => {\r\n  ctx?.clearRect(0, 0, window.innerWidth - 300, window.innerHeight);\r\n  // plotEdges(ctx, graphRef.current);\r\n\r\n  let l = result ? result.length : 0;\r\n  for (let i = 0; i < l - 1; i++) {\r\n    ctx.beginPath();\r\n    ctx.moveTo(graph[result[i]].x, graph[result[i]].y);\r\n    ctx.lineTo(graph[result[i + 1]].x, graph[result[i + 1]].y);\r\n    ctx.strokeStyle = edgeColor;\r\n    ctx.stroke();\r\n  }\r\n\r\n  plotNodes(ctx, graph, cityColor);\r\n};\r\n\r\nconst TSP = (props) => {\r\n  const [ctx, setCtx] = useState(null);\r\n  const canvasRef = useRef(null);\r\n  const graphRef = useRef(null);\r\n  const [gaSteps, setGASteps] = useState(null);\r\n  const [status, setStatus] = useState(\"Paused\");\r\n  const [speed, setSpeed] = useState(200);\r\n  const [generations, setGenerations] = useState(20);\r\n  const [initialPopulation, setInitialPopulation] = useState(10);\r\n  const [cities, setCities] = useState(10);\r\n  const [data, setData] = useState(null);\r\n  const [over, setOver] = useState(true);\r\n  const [cityColor, setCityColor] = useState(\"#9AFF6E\");\r\n  const [edgeColor, setEdgeColor] = useState(\"#DA60FF\");\r\n  const [showCityNumber, setShowCityNumber] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setGASteps(GA(cities, graphRef.current, generations, initialPopulation));\r\n  }, [generations, initialPopulation]);\r\n\r\n  useEffect(() => {\r\n    if (canvasRef && canvasRef.current && over) {\r\n      setOver(false);\r\n\r\n      const canvas = document.getElementById(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      graphRef.current = generateRandomGraph(\r\n        cities,\r\n        window.innerHeight,\r\n        window.innerWidth - 300\r\n      );\r\n      ctx?.clearRect(0, 0, window.innerWidth - 300, window.innerHeight);\r\n      setData(null);\r\n      // plotEdges(ctx, graphRef.current);\r\n      plotNodes(ctx, graphRef.current, cityColor);\r\n      setCtx(ctx);\r\n      setGASteps(GA(cities, graphRef.current, generations, initialPopulation));\r\n    }\r\n  }, [canvasRef, cities, over]);\r\n\r\n  useEffect(() => {\r\n    if (status.localeCompare(\"Paused\") === 0 && ctx) {\r\n      plotEdges(\r\n        ctx,\r\n        graphRef.current,\r\n        data?.result?.path,\r\n        edgeColor,\r\n        cityColor\r\n      );\r\n    }\r\n  }, [cityColor, edgeColor]);\r\n  useEffect(() => {\r\n    if (gaSteps != null && status.localeCompare(\"Playing\") === 0) {\r\n      const interval = setInterval(() => {\r\n        const next = gaSteps.next();\r\n        if (next.done) {\r\n          setStatus(\"Paused\");\r\n          setGASteps(\r\n            GA(cities, graphRef.current, generations, initialPopulation)\r\n          );\r\n          return;\r\n        }\r\n        const state = next.value;\r\n        setData(state);\r\n        plotEdges(\r\n          ctx,\r\n          graphRef.current,\r\n          state.result.path,\r\n          edgeColor,\r\n          cityColor\r\n        );\r\n      }, speed);\r\n      return () => {\r\n        clearInterval(interval);\r\n      };\r\n    }\r\n  }, [\r\n    gaSteps,\r\n    status,\r\n    speed,\r\n    initialPopulation,\r\n    generations,\r\n    cities,\r\n    cityColor,\r\n    edgeColor,\r\n  ]);\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <div style={{ width: 300, height: window.innerHeight, padding: 4 }}>\r\n        <Row style={{ padding: \"2px 0px 2px 0px\", margin: 0 }}>\r\n          <Col\r\n            style={{\r\n              padding: 2,\r\n              margin: 0,\r\n              justifyContent: \"flex-start\",\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            <Button\r\n              variant={\r\n                status.localeCompare(\"Playing\") === 0 ? \"dark\" : \"success\"\r\n              }\r\n              style={{\r\n                padding: \"2px 8px 2px 8px\",\r\n                margin: \"0px 4px 0px 4px\",\r\n                boxShadow: \"none\",\r\n                fontSize: 12,\r\n              }}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                status.localeCompare(\"Playing\") === 0\r\n                  ? setStatus(\"Paused\")\r\n                  : setStatus(\"Playing\");\r\n              }}\r\n            >\r\n              {status.localeCompare(\"Playing\") === 0 ? \"Pause\" : \"Play\"}\r\n            </Button>\r\n            <Button\r\n              disabled={over}\r\n              variant={\r\n                status.localeCompare(\"Playing\") === 0 ? \"dark\" : \"success\"\r\n              }\r\n              style={{\r\n                padding: \"2px 8px 2px 8px\",\r\n                margin: \"0px 4px 0px 4px\",\r\n                boxShadow: \"none\",\r\n                fontSize: 12,\r\n              }}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                setOver(true);\r\n              }}\r\n            >\r\n              Restart\r\n            </Button>\r\n          </Col>\r\n\r\n          <Col style={{ padding: 2, margin: 0 }}>\r\n            {data ? (\r\n              <span\r\n                style={{ fontSize: 12, fontWeight: \"500\", textAlign: \"right\" }}\r\n              >{`Best distance : ${Math.floor(data.result.fitness)}`}</span>\r\n            ) : null}\r\n          </Col>\r\n        </Row>\r\n\r\n        <div\r\n          style={{ width: \"100%\", height: 1, backgroundColor: \"#989898\" }}\r\n        ></div>\r\n        <Row\r\n          style={{\r\n            padding: 2,\r\n            margin: \"2px 0px 2px 0px\",\r\n          }}\r\n        >\r\n          <Col\r\n            style={{\r\n              padding: 2,\r\n              margin: 0,\r\n              display: \"flex\",\r\n              justifyContent: \"flex-start\",\r\n            }}\r\n          >\r\n            {data ? (\r\n              <span\r\n                style={{ fontSize: 12, fontWeight: \"500\", textAlign: \"left\" }}\r\n              >{`Generation covered : ${Math.floor(data.gen)}`}</span>\r\n            ) : null}\r\n          </Col>\r\n        </Row>\r\n\r\n        <Range\r\n          min={0}\r\n          max={20000}\r\n          step={10}\r\n          title=\"Generations\"\r\n          value={generations}\r\n          onChange={(val) => {\r\n            setGenerations(val);\r\n          }}\r\n        ></Range>\r\n\r\n        <Range\r\n          min={0}\r\n          max={100}\r\n          step={1}\r\n          title=\"Cities\"\r\n          value={cities}\r\n          onChange={(val) => {\r\n            setCities(val);\r\n          }}\r\n        ></Range>\r\n\r\n        <Range\r\n          min={10}\r\n          max={100}\r\n          step={1}\r\n          title=\"Initial population\"\r\n          value={initialPopulation}\r\n          onChange={(val) => {\r\n            setInitialPopulation(val);\r\n          }}\r\n        ></Range>\r\n\r\n        <Range\r\n          min={50}\r\n          max={2000}\r\n          step={10}\r\n          title=\"Speed\"\r\n          value={speed}\r\n          onChange={(val) => {\r\n            setSpeed(val);\r\n          }}\r\n        ></Range>\r\n\r\n        <div\r\n          style={{ width: \"100%\", height: 1, backgroundColor: \"#989898\" }}\r\n        ></div>\r\n        <Row\r\n          style={{\r\n            padding: 2,\r\n            margin: \"4px 0px 4px 0px\",\r\n            textAlign: \"left\",\r\n            fontSize: 12,\r\n            fontWeight: \"500\",\r\n            display: \"flex\",\r\n            justifyContent: \"flex-start\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              backgroundColor: cityColor,\r\n              width: 10,\r\n              height: 10,\r\n              margin: \"0px 10px 0px 0px\",\r\n              borderRadius: 5,\r\n            }}\r\n          ></div>\r\n          <span>City color</span>\r\n        </Row>\r\n        <GithubPicker\r\n          width={\"100%\"}\r\n          color={cityColor}\r\n          triangle=\"hide\"\r\n          onChangeComplete={(color, event) => {\r\n            // console.log(color);\r\n            setCityColor(color.hex);\r\n          }}\r\n        />\r\n\r\n        <Row\r\n          style={{\r\n            padding: 2,\r\n            margin: \"2px 0px 4px 0px\",\r\n            textAlign: \"left\",\r\n            fontSize: 12,\r\n            fontWeight: \"500\",\r\n            display: \"flex\",\r\n            justifyContent: \"flex-start\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              backgroundColor: edgeColor,\r\n              width: 10,\r\n              height: 10,\r\n              margin: \"0px 10px 0px 0px\",\r\n              borderRadius: 5,\r\n            }}\r\n          ></div>\r\n          <span>Edge color</span>\r\n        </Row>\r\n        <GithubPicker\r\n          width={\"100%\"}\r\n          triangle=\"hide\"\r\n          color={edgeColor}\r\n          onChangeComplete={(color, event) => {\r\n            // console.log(color);\r\n            setEdgeColor(color.hex);\r\n          }}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{ width: window.innerWidth - 300, height: window.innerHeight }}\r\n      >\r\n        <canvas\r\n          id=\"canvas\"\r\n          ref={canvasRef}\r\n          width={window.innerWidth - 300}\r\n          height={window.innerHeight}\r\n          style={{ backgroundColor: \"#222222\" }}\r\n        ></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TSP;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport TSP from \"./ga/tsp\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TSP></TSP>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}